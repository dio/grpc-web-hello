admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  listeners:
    - name: listener_front
      address:
        socket_address: { address: 0.0.0.0, port_value: 8000 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: front_route
                  virtual_hosts:
                    - name: front_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: greeter_front
                http_filters:
                  - name: envoy.filters.http.router

          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: "h2,http/1.1"
                tls_certificates:
                  # The following self-signed certificate pair is generated using:
                  # $ openssl req -x509 -newkey rsa:2048 -keyout a/front-proxy-key.pem -out  a/front-proxy-crt.pem -days 3650 -nodes -subj '/CN=front-envoy'
                  #
                  # Instead of feeding it as an inline_string, certificate pair can also be fed to Envoy
                  # via filename. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/base.proto#config-core-v3-datasource.
                  #
                  # Or in a dynamic configuration scenario, certificate pair can be fetched remotely via
                  # Secret Discovery Service (SDS). Reference: https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret.
                  certificate_chain:
                    inline_string: |
                      -----BEGIN CERTIFICATE-----
                      MIICojCCAYoCCQDaI3PsMssCDTANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhv
                      ay5sb2NhbDAeFw0yMDA3MjAwNzU3MTBaFw0zMDA3MTgwNzU3MTBaMBMxETAPBgNV
                      BAMMCG9rLmxvY2FsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1Whh
                      8w28rTSLlXhmDrrY8fP99tlI6jC0opzXIXBJBrscuSZvflMU7g/uAjIdGm2wItki
                      r0z1sBSfKS+8txZvXQjlzniuSLUlPe8hr7W3HYSDpRsUJvLDdN7sVMvMiItyYKWP
                      ATnQcpgKXW3m9pVZEK+Y4ChPlb2QyVpBCWKpoUf+cCPIfniNQQbpFUVNRPl/3ixT
                      lRGYs7Vb2cLaLGYu3qxRMfFhqItxsTa+F892a2+tpPi0rwdZy/mL40v8vGAzsQye
                      4PAimcY0a6g8QwuQwuhQLIgth9Ys9FsqVET4ltitIiMjCkzkquLopWwkk37rCUfW
                      zWrbKdiH5iageLMe6wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA0h1z1/pNns2QX
                      /j29/HelLPFkgE5nKZGk1TrEWuuPqhqHb/lbbRpdKNlJKONVcOVH/ZLNaAnL5E3t
                      G2Cpxx+irRntZ5RP408OPZ9IGdoVkbsS9j6GxNkLtfSUDmrgTg8UbiRLzNCLSQU8
                      8xb5VOYCk6UqSLi2ChiVCvxnySSGUbTNGMrv1xI/kKiskZ36Z7cmuw183QLYt8us
                      7HYd1+bd7Alo/qo3gkq+qKwUdb1HSw9SbeBMb+gKajouZsYzis75w7c4EgU6FUam
                      FJNhd39Kxpr9FEDObgi7VW3CeK9xydH0O/C1fcBY8iJ0WUHY4GkTCnYw9Wv0Boyz
                      oN8XaOe/
                      -----END CERTIFICATE-----
                  private_key:
                    inline_string: |
                      -----BEGIN PRIVATE KEY-----
                      MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDVaGHzDbytNIuV
                      eGYOutjx8/322UjqMLSinNchcEkGuxy5Jm9+UxTuD+4CMh0abbAi2SKvTPWwFJ8p
                      L7y3Fm9dCOXOeK5ItSU97yGvtbcdhIOlGxQm8sN03uxUy8yIi3JgpY8BOdBymApd
                      beb2lVkQr5jgKE+VvZDJWkEJYqmhR/5wI8h+eI1BBukVRU1E+X/eLFOVEZiztVvZ
                      wtosZi7erFEx8WGoi3GxNr4Xz3Zrb62k+LSvB1nL+YvjS/y8YDOxDJ7g8CKZxjRr
                      qDxDC5DC6FAsiC2H1iz0WypURPiW2K0iIyMKTOSq4uilbCSTfusJR9bNatsp2Ifm
                      JqB4sx7rAgMBAAECggEAe4pg4aZ7Kj237IB1fGN4QaEAzUz+I+ysNVLcS1RIQihB
                      uYFhm9yWyjXYj9bY+Dq1c4cFyDuiIxvdA6fJ9Kd9Mnt7JarBIgATniX391MXvXPA
                      De1+Hgn9UoPWhkQwlH89aGuPPKNuY1hW7702rlrI45rzwhgz8jh6P8YKzlcaYe1P
                      u1FAAbypat6WH+yd4Y9eVbDahFflV7fJaSiBE66EGlNcVn0+0/KXvOgMH14LTQVQ
                      3MnLX4JixSAbPgdHi2aNhZyRqjFyV2bb876oVN6dgqmdyaKbwsxn2qQtbsj2+vMl
                      cdXbHkPaOnOva1taSgGqqGY/aNoRTRxnIInreUxLyQKBgQDx6m3VuWP2ydbaj4n/
                      ZOZqzOwrBBz4+rhU3r2W7kizhC9fHz5ZdEPYu2TztNDyHQGknz2xX1dgmWRvHSJm
                      VvJtwzSaxTqFF4MpMCqeYeJI3rajKal3H09D+kXpqa6sTrw/MvrJtR05afGfGmQo
                      WijWLCmLzRw5moMDXNnZ/JwytQKBgQDh1RBByry5qiOuePk6mk1J1y3KNlFpzfdN
                      61G9PUSINzHRu4I7ER8X5OQagzTbqwYkYHLU/IfbS5HnnyoD9dk+b0butMsMjLFD
                      xhjoPD+bN264D+yOW62k4QkSksBrJWgrXlgAV/dpB6s6H9bUsZSBqay5Yr7pToSU
                      xYk8AervHwKBgCEDzVmNo4bapOfPDxY7vvZ0YQa92PZhwSZT/6vJeUKGl7Bzox6y
                      L1A0wuI/mwRv0PmWgeTjDhmw1XQUlc1BsHQqX9N/dy0SuGO2nxpeYXNwcZxy4x3O
                      uBKe5UuuTJhXZnl5i6Bbh1F+k+sSvviC1W/lNwZNR7zUyWx8D38ganDBAoGAHSYO
                      Gh/b6i7+ugddS+Ycsbo3a9FFAt4V3JXSEBX3YYmWQZbtQUh9de0SUCW9TdkuSsW0
                      LK+HrZN8eqP9nVM/PiLIygjF6JHEU5YfIuKb5yHphZJwmxNUP2LYc/BDK9FBN8/O
                      lgTEp2bZAACaDwv4uh+3bppDQAPlcvpoMzmgJEsCgYAr1YkL6EkmAOigdas/a2nw
                      7mcdGWp0kLOlJb1sQAhc/S+n8GVLxL/0RYRztQNfZQVj5zmYhwCPvdzKVeLrEadT
                      /cYasVAXF/T6jH+J3zpdszoXlgbLAOEjRrvVTb1YNKFB3be5OwmaVtXGNekHYJLC
                      tWeSRr+LSkzltsr/zjl7vg==
                      -----END PRIVATE KEY-----

    - name: listener_0
      address:
        socket_address: { address: 0.0.0.0, port_value: 8080 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                codec_type: auto
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route:
                            cluster: greeter_service
                            max_grpc_timeout: 10s
                      cors:
                        allow_origin_string_match:
                          - prefix: "*"
                        allow_methods: GET, PUT, DELETE, POST, OPTIONS
                        allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,custom-header-1,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                        max_age: "1728000"
                        expose_headers: custom-header-1,grpc-status,grpc-message
                http_filters:
                  - name: envoy.filters.http.grpc_web
                  - name: envoy.filters.http.cors
                  - name: envoy.filters.http.router

          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                alpn_protocols: "h2,http/1.1"
                tls_certificates:
                  # The following self-signed certificate pair is generated using:
                  # $ openssl req -x509 -newkey rsa:2048 -keyout a/front-proxy-key.pem -out  a/front-proxy-crt.pem -days 3650 -nodes -subj '/CN=front-envoy'
                  #
                  # Instead of feeding it as an inline_string, certificate pair can also be fed to Envoy
                  # via filename. Reference: https://www.envoyproxy.io/docs/envoy/latest/api-v3/config/core/v3/base.proto#config-core-v3-datasource.
                  #
                  # Or in a dynamic configuration scenario, certificate pair can be fetched remotely via
                  # Secret Discovery Service (SDS). Reference: https://www.envoyproxy.io/docs/envoy/latest/configuration/security/secret.
                  certificate_chain:
                    inline_string: |
                      -----BEGIN CERTIFICATE-----
                      MIICojCCAYoCCQDaI3PsMssCDTANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhv
                      ay5sb2NhbDAeFw0yMDA3MjAwNzU3MTBaFw0zMDA3MTgwNzU3MTBaMBMxETAPBgNV
                      BAMMCG9rLmxvY2FsMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA1Whh
                      8w28rTSLlXhmDrrY8fP99tlI6jC0opzXIXBJBrscuSZvflMU7g/uAjIdGm2wItki
                      r0z1sBSfKS+8txZvXQjlzniuSLUlPe8hr7W3HYSDpRsUJvLDdN7sVMvMiItyYKWP
                      ATnQcpgKXW3m9pVZEK+Y4ChPlb2QyVpBCWKpoUf+cCPIfniNQQbpFUVNRPl/3ixT
                      lRGYs7Vb2cLaLGYu3qxRMfFhqItxsTa+F892a2+tpPi0rwdZy/mL40v8vGAzsQye
                      4PAimcY0a6g8QwuQwuhQLIgth9Ys9FsqVET4ltitIiMjCkzkquLopWwkk37rCUfW
                      zWrbKdiH5iageLMe6wIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQA0h1z1/pNns2QX
                      /j29/HelLPFkgE5nKZGk1TrEWuuPqhqHb/lbbRpdKNlJKONVcOVH/ZLNaAnL5E3t
                      G2Cpxx+irRntZ5RP408OPZ9IGdoVkbsS9j6GxNkLtfSUDmrgTg8UbiRLzNCLSQU8
                      8xb5VOYCk6UqSLi2ChiVCvxnySSGUbTNGMrv1xI/kKiskZ36Z7cmuw183QLYt8us
                      7HYd1+bd7Alo/qo3gkq+qKwUdb1HSw9SbeBMb+gKajouZsYzis75w7c4EgU6FUam
                      FJNhd39Kxpr9FEDObgi7VW3CeK9xydH0O/C1fcBY8iJ0WUHY4GkTCnYw9Wv0Boyz
                      oN8XaOe/
                      -----END CERTIFICATE-----
                  private_key:
                    inline_string: |
                      -----BEGIN PRIVATE KEY-----
                      MIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDVaGHzDbytNIuV
                      eGYOutjx8/322UjqMLSinNchcEkGuxy5Jm9+UxTuD+4CMh0abbAi2SKvTPWwFJ8p
                      L7y3Fm9dCOXOeK5ItSU97yGvtbcdhIOlGxQm8sN03uxUy8yIi3JgpY8BOdBymApd
                      beb2lVkQr5jgKE+VvZDJWkEJYqmhR/5wI8h+eI1BBukVRU1E+X/eLFOVEZiztVvZ
                      wtosZi7erFEx8WGoi3GxNr4Xz3Zrb62k+LSvB1nL+YvjS/y8YDOxDJ7g8CKZxjRr
                      qDxDC5DC6FAsiC2H1iz0WypURPiW2K0iIyMKTOSq4uilbCSTfusJR9bNatsp2Ifm
                      JqB4sx7rAgMBAAECggEAe4pg4aZ7Kj237IB1fGN4QaEAzUz+I+ysNVLcS1RIQihB
                      uYFhm9yWyjXYj9bY+Dq1c4cFyDuiIxvdA6fJ9Kd9Mnt7JarBIgATniX391MXvXPA
                      De1+Hgn9UoPWhkQwlH89aGuPPKNuY1hW7702rlrI45rzwhgz8jh6P8YKzlcaYe1P
                      u1FAAbypat6WH+yd4Y9eVbDahFflV7fJaSiBE66EGlNcVn0+0/KXvOgMH14LTQVQ
                      3MnLX4JixSAbPgdHi2aNhZyRqjFyV2bb876oVN6dgqmdyaKbwsxn2qQtbsj2+vMl
                      cdXbHkPaOnOva1taSgGqqGY/aNoRTRxnIInreUxLyQKBgQDx6m3VuWP2ydbaj4n/
                      ZOZqzOwrBBz4+rhU3r2W7kizhC9fHz5ZdEPYu2TztNDyHQGknz2xX1dgmWRvHSJm
                      VvJtwzSaxTqFF4MpMCqeYeJI3rajKal3H09D+kXpqa6sTrw/MvrJtR05afGfGmQo
                      WijWLCmLzRw5moMDXNnZ/JwytQKBgQDh1RBByry5qiOuePk6mk1J1y3KNlFpzfdN
                      61G9PUSINzHRu4I7ER8X5OQagzTbqwYkYHLU/IfbS5HnnyoD9dk+b0butMsMjLFD
                      xhjoPD+bN264D+yOW62k4QkSksBrJWgrXlgAV/dpB6s6H9bUsZSBqay5Yr7pToSU
                      xYk8AervHwKBgCEDzVmNo4bapOfPDxY7vvZ0YQa92PZhwSZT/6vJeUKGl7Bzox6y
                      L1A0wuI/mwRv0PmWgeTjDhmw1XQUlc1BsHQqX9N/dy0SuGO2nxpeYXNwcZxy4x3O
                      uBKe5UuuTJhXZnl5i6Bbh1F+k+sSvviC1W/lNwZNR7zUyWx8D38ganDBAoGAHSYO
                      Gh/b6i7+ugddS+Ycsbo3a9FFAt4V3JXSEBX3YYmWQZbtQUh9de0SUCW9TdkuSsW0
                      LK+HrZN8eqP9nVM/PiLIygjF6JHEU5YfIuKb5yHphZJwmxNUP2LYc/BDK9FBN8/O
                      lgTEp2bZAACaDwv4uh+3bppDQAPlcvpoMzmgJEsCgYAr1YkL6EkmAOigdas/a2nw
                      7mcdGWp0kLOlJb1sQAhc/S+n8GVLxL/0RYRztQNfZQVj5zmYhwCPvdzKVeLrEadT
                      /cYasVAXF/T6jH+J3zpdszoXlgbLAOEjRrvVTb1YNKFB3be5OwmaVtXGNekHYJLC
                      tWeSRr+LSkzltsr/zjl7vg==
                      -----END PRIVATE KEY-----

  clusters:
    - name: greeter_service
      connect_timeout: 5s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      http2_protocol_options: {}
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: greeter_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: greeter-backend
                      port_value: 9090

    - name: greeter_front
      connect_timeout: 5s
      type: LOGICAL_DNS
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: greeter_front
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: greeter-frontend
                      port_value: 5000

layered_runtime:
  layers:
    - name: static_layer
      static_layer:
        "envoy.reloadable_features.skip_encoding_empty_trailers": true
